Append element to the list from right

apr : M^2 -> M

For example: append 0' to [] -->> [0']

>>> (Y (Lf.(Lx.(Ly.If (Null y) (Cons x 0')  (Cons (Car y) (f x (Cdr y))) )))) 0' 0'

Your input is parsed as:
(((Y (Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y)))))))) 0') 0')

Starting beta-Reduction

1: ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') 0')

2: ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') 0')

3: (((Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) x) (Cdr y)))))) 0') 0')

4: ((Ly.(((If (Null y)) ((Cons 0') 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Consx) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr y))))) 0')

5: (((If (Null 0')) ((Cons 0') 0')) ((Cons (Car 0')) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x)0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr 0'))))

6: (((Ly.(Lz.((((Null (Null 0')) T) y) z))) ((Ly.(((If ((And (Atom y)) (Null (Null y)))) Omega) (((If 0') (Lz.((z 0') y))) (Lz.((z 0') y))))) 0')) ((Ly.(((If ((And (Atom y)) (Null (Null y))))Omega) (((If (Car 0')) (Lz.((z (Car 0')) y))) (Lz.((z (Car 0')) y))))) ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F)))))

7: ((Lz.((((Null (Null 0')) T) ((Ly.(((If ((And (Atom y)) (Null (Null y)))) Omega) (((If 0') (Lz.((z 0') y))) (Lz.((z 0') y))))) 0')) z)) (((If ((And (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))) (Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))))) Omega) (((If (Car 0')) (Lz.((z (Car 0')) ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x)0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F)))))) (Lz.((z (Car 0')) ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))))))

8: ((((Null (Null 0')) T) ((Ly.(((If ((And (Atom y)) (Null (Null y)))) Omega) (((If 0') (Lz.((z 0') y))) (Lz.((z 0') y))))) 0')) (((If ((And (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Cary)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))) (Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))))) Omega) (((If (Car 0')) (Lz.((z (Car 0')) ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F)))))) (Lz.((z (Car 0')) ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))))))

9: ((((((((Null 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((If ((And (Atom 0')) (Null (Null 0')))) Omega) (((If 0') (Lz.((z 0') 0'))) (Lz.((z 0') 0'))))) (((Ly.(Lz.((((Null ((And (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))) (Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (xx))))) 0') (((If (Atom 0')) Omega) (0' F))))))) T) y) z))) Omega) (((Ly.(Lz.((((Null (Car 0')) T) y) z))) (Lz.((z (((If (Atom 0')) Omega) (0' T))) (((Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) x) (Cdr y)))))) 0') (((Ly.(Lz.((((Null (Atom 0')) T) y) z))) Omega) F))))) (Lz.((z (((If (Atom 0')) Omega) (0' T))) (((Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) x) (Cdr y)))))) 0') (((Ly.(Lz.((((Null (Atom 0')) T) y) z))) Omega) F)))))))

10: (((((((((((0' (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((Ly.(Lz.((((Null ((And (Atom 0')) (Null (Null 0')))) T) y) z))) Omega) (((Ly.(Lz.((((Null 0') T) y) z))) (Lz.((z 0') 0'))) (Lz.((z 0') 0'))))) ((Lz.((((Null ((And (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))) (Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))))) T) Omega) z)) ((Lz.((((Null (Car 0')) T) (Lz.((z (((If (Atom 0')) Omega) (0' T))) (((Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) x) (Cdr y)))))) 0') (((Ly.(Lz.((((Null (Atom 0')) T) y) z))) Omega) F))))) z)) (Lz.((z (((Ly.(Lz.((((Null (Atom 0')) T) y) z))) Omega) T)) ((Ly.(((If (Null y)) ((Cons 0') 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y))((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr y))))) ((Lz.((((Null (Atom 0')) T) Omega) z)) F)))))))

11: (((((((((((Lx.(Ly.(Lz.z))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) ((Lz.((((Null ((And (Atom 0')) (Null (Null 0')))) T) Omega) z)) ((Lz.((((Null 0') T) (Lz.((z 0') 0'))) z)) (Lz.((z 0') 0'))))) ((((Null ((And (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))) (Null (Null ((((Lf.(Lx.(Ly.(((If (Null y))((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))))) T) Omega) ((Lz.((((Null (Car 0')) T) (Lz.((z (((If (Atom 0')) Omega) (0' T))) (((Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) x) (Cdr y)))))) 0') (((Ly.(Lz.((((Null (Atom 0')) T) y) z))) Omega) F))))) z)) (Lz.((z (((Ly.(Lz.((((Null (Atom 0')) T) y) z))) Omega) T)) ((Ly.(((If (Null y)) ((Cons 0') 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr y))))) ((Lz.((((Null (Atom 0')) T) Omega) z)) F)))))))

12: ((((((((((Ly.(Lz.z)) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) ((((Null ((And (Atom 0')) (Null (Null 0')))) T) Omega) ((Lz.((((Null 0') T) (Lz.((z 0') 0'))) z)) (Lz.((z 0') 0'))))) (((((((((And (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))) (Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F)))))) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) ((((Null (Car 0')) T) (Lz.((z (((If (Atom 0')) Omega) (0' T))) (((Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Cary)) ((f x) (Cdr y))))))) (x x)))) x) (Cdr y)))))) 0') (((Ly.(Lz.((((Null (Atom 0')) T) y) z))) Omega) F))))) (Lz.((z (((Ly.(Lz.((((Null (Atom 0')) T) y) z))) Omega) T)) ((Ly.(((If (Null y)) ((Cons 0') 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr y))))) ((Lz.((((Null (Atom 0')) T) Omega) z)) F)))))))

13: (((((((((Lz.z) 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((((((((And (Atom 0')) (Null (Null 0'))) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) ((((Null 0') T) (Lz.((z 0') 0'))) (Lz.((z 0') 0'))))) (((((((((Ly.(((If (Null (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F)))))) (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Consx) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))) y)) (((((Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F)))) (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) ((((((((Car 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (Lz.((z (((Ly.(Lz.((((Null (Atom 0')) T) y) z))) Omega) T)) ((Ly.(((If (Null y)) ((Cons 0') 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr y))))) ((Lz.((((Null (Atom 0')) T) Omega) z)) F))))) (Lz.((z ((Lz.((((Null (Atom 0')) T) Omega) z)) T)) (((If (Null ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) ((Cons 0') 0')) ((Cons (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr ((Lz.((((Null (Atom 0')) T) Omega) z)) F))))))))))

14: (((((((1' (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((((((((Ly.(((If (Null (Atom 0'))) (Atom 0')) y)) (((((Null 0') (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (((((((0' (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (Lz.((z 0') 0'))) (Lz.((z 0') 0'))))) ((((((((((If (Null (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F)))))) (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))) (((((Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F)))) (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) ((((((((((If (Atom 0')) Omega) (0' T)) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (Lz.((z ((Lz.((((Null (Atom 0')) T) Omega) z)) T)) (((If (Null ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) ((Cons 0') 0')) ((Cons (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr ((Lz.((((Null (Atom 0')) T) Omega) z)) F)))))))) (Lz.((z ((((Null (Atom 0')) T) Omega) T)) (((Ly.(Lz.((((Null (Null ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) y) z))) ((Ly.(((If ((And (Atom y)) (Null (Null y)))) Omega) (((If 0') (Lz.((z 0') y))) (Lz.((z 0') y))))) 0')) ((Ly.(((If ((And (Atom y)) (Null (Null y)))) Omega) (((If (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) (Lz.((z (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) y))) (Lz.((z (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) y))))) ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Cary)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))))))))

15: (((((((((Lx.(Ly.(Lz.z))) F) 0') T) 0') 1') T) ((((((((((If (Null (Atom 0'))) (Atom 0')) (((((Null 0') (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (((((((Lx.(Ly.(Lz.z))) T) 0') 1') T) (Lz.((z 0') 0'))) (Lz.((z 0') 0'))))) ((((((((((Ly.(Lz.((((Null (Null (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom0')) Omega) (0' F)))))) T) y) z))) (((If (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))) 1') (False (((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Nully)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))) T)))) ((((((((((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) ((((((((((Ly.(Lz.((((Null (Atom 0')) T) y) z))) Omega) T) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (Lz.((z ((((Null (Atom 0')) T) Omega) T)) (((Ly.(Lz.((((Null (Null ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) y) z))) ((Ly.(((If ((And (Atom y)) (Null (Null y)))) Omega) (((If 0') (Lz.((z 0') y))) (Lz.((z 0') y))))) 0')) ((Ly.(((If ((And (Atom y)) (Null (Null y)))) Omega) (((If (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) (Lz.((z (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) y))) (Lz.((z (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) y))))) ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))))0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F)))))))) (Lz.((z ((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) T)) ((Lz.((((Null (Null ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) ((Ly.(((If ((And (Atom y)) (Null (Null y)))) Omega) (((If 0') (Lz.((z 0') y))) (Lz.((z 0') y))))) 0')) z)) (((If ((And (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))) (Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))))) Omega) (((If (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) (Lz.((z (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons(Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((fx) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F)))))) (Lz.((z (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F)))))))))))))

16: ((((((((Ly.(Lz.z)) 0') T) 0') 1') T) ((((((((((Ly.(Lz.((((Null (Null (Atom 0'))) T) y) z))) (((If (Null 0')) 1') (False (0' T)))) ((((((((0' (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z))))T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) ((((((Ly.(Lz.z)) 0') 1') T) (Lz.((z 0') 0'))) (Lz.((z 0') 0'))))) (((((((((Lz.((((Null (Null (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F)))))) T) (((If (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))) 1') (False (((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdry))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))) T)))) z)) (((((((((((Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y))((f x) (Cdr y))))))) (x x)))) x) (Cdr y)))))) 0') (((Ly.(Lz.((((Null (Atom 0')) T) y) z))) Omega) F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (((((((((Lz.((((Null (Atom 0')) T) Omega) z)) T) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (Lz.((z ((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) T)) ((Lz.((((Null (Null ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) ((Ly.(((If ((And (Atom y)) (Null (Null y)))) Omega) (((If 0') (Lz.((z 0') y))) (Lz.((z 0') y))))) 0')) z)) (((If ((And (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))) (Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y))((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))))) Omega) (((If (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) (Lz.((z (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0')(((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F)))))) (Lz.((z (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) ((((Lf.(Lx.(Ly.(((If(Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))))))))) (Lz.((z ((((((((((If (Null 0')) 1') (False (0' T))) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) T)) ((((Null (Null ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) ((Ly.(((If ((And (Atom y)) (Null (Null y))))Omega) (((If 0') (Lz.((z 0') y))) (Lz.((z 0') y))))) 0')) (((If ((And (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))) (Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))))) Omega) (((If (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) (Lz.((z (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F)))))) (Lz.((z (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F)))))))))))))

17: (((((((Lz.z) T) 0') 1') T) (((((((((Lz.((((Null (Null (Atom 0'))) T) (((If (Null 0')) 1') (False (0' T)))) z)) ((((((((Lx.(Ly.(Lz.z))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (((((Lz.z) 1') T) (Lz.((z 0') 0'))) (Lz.((z 0') 0'))))) (((((((((((Null (Null (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F)))))) T) (((If (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))) 1') (False (((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))) T)))) (((((((((((Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) x) (Cdr y)))))) 0') (((Ly.(Lz.((((Null (Atom 0')) T) y) z))) Omega) F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (((((((((((Null (Atom 0')) T) Omega) T) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (Lz.((z ((((((((((If (Null 0')) 1') (False (0' T))) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) T)) ((((Null (Null ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) ((Ly.(((If ((And (Atom y)) (Null (Null y)))) Omega) (((If 0') (Lz.((z 0') y))) (Lz.((z 0') y))))) 0')) (((If ((And (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x)(Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))) (Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))))) Omega) (((If (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) (Lz.((z (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F)))))) (Lz.((z (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))))))))) (Lz.((z ((((((((((Ly.(Lz.((((Null (Null 0')) T) y) z))) 1') (((((0' T) (Lx.(Ly.(Lz.0')))) T) 1') F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) T)) ((((((((Null ((Lz.((((Null (Atom 0')) T) Omega) z)) F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((If ((And (Atom 0')) (Null (Null 0')))) Omega) (((If 0') (Lz.((z 0') 0'))) (Lz.((z 0') 0'))))) (((Ly.(Lz.((((Null ((And (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))) (Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))))) T) y) z))) Omega) (((Ly.(Lz.((((Null (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) y) z))) (Lz.((z (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) T))) (((Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) x) (Cdr y)))))) 0') (((Ly.(Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) y) z))) Omega) (((((Null (Atom 0')) T) Omega) F) F)))))) (Lz.((z(((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) T))) (((Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) x) (Cdr y)))))) 0') (((Ly.(Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) y) z))) Omega) (((((Null (Atom 0')) T) Omega) F) F)))))))))))))

18: (((((T 0') 1') T) (((((((((((Null (Null (Atom 0'))) T) (((If (Null 0')) 1') (False (0' T)))) ((((((((Lx.(Ly.(Lz.z))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (((1' T) (Lz.((z 0') 0'))) (Lz.((z 0') 0'))))) (((((((((((((((Null (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((Ly.(Lz.((((Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))) T) y) z))) 1') (((((((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))) T) (Lx.(Ly.(Lz.0')))) T) 1') F))) ((((((((((Ly.(((If (Null y)) ((Cons 0') 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr y))))) ((Lz.((((Null (Atom 0')) T) Omega) z)) F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (((((((((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) T) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (Lz.((z ((((((((((Ly.(Lz.((((Null (Null 0')) T) y) z))) 1') (((((0' T) (Lx.(Ly.(Lz.0')))) T) 1') F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) T)) ((((((((Null ((Lz.((((Null (Atom 0')) T) Omega) z)) F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((If ((And (Atom 0')) (Null (Null 0')))) Omega) (((If 0') (Lz.((z 0') 0'))) (Lz.((z 0') 0'))))) (((Ly.(Lz.((((Null ((And (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))) (Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))))) T) y) z))) Omega) (((Ly.(Lz.((((Null (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) y) z))) (Lz.((z (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) T))) (((Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) x) (Cdr y)))))) 0') (((Ly.(Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) y) z))) Omega) (((((Null (Atom 0')) T) Omega) F) F)))))) (Lz.((z (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) T))) (((Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) x) (Cdr y)))))) 0') (((Ly.(Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega)z)) F))) T) y) z))) Omega) (((((Null (Atom 0')) T) Omega) F) F))))))))))) (Lz.((z (((((((((Lz.((((Null (Null 0')) T) 1') z)) ((((T (Lx.(Ly.(Lz.0')))) T) 1') F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) T)) (((((((((((((Lz.((((Null (Atom 0')) T) Omega) z)) F) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((Ly.(Lz.((((Null ((And (Atom 0')) (Null (Null 0')))) T) y) z)))Omega) (((Ly.(Lz.((((Null 0') T) y) z))) (Lz.((z 0') 0'))) (Lz.((z 0') 0'))))) ((Lz.((((Null ((And (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))) (Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y)))))))(x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))))) T) Omega) z)) ((Lz.((((Null (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) (Lz.((z (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) T))) (((Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) x) (Cdr y)))))) 0') (((Ly.(Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) y) z))) Omega) (((((Null (Atom 0')) T) Omega) F) F)))))) z)) (Lz.((z (((Ly.(Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) y) z))) Omega) (((((Null (Atom 0')) T) Omega) F) T))) ((Ly.(((If (Null y)) ((Cons 0') 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr y))))) ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) F)))))))))))))

19: (((((Ly.0') 1') T) (((((((((((((((Null (Atom 0')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((Ly.(Lz.((((Null (Null 0')) T) y) z))) 1') (((((0' T) (Lx.(Ly.(Lz.0')))) T) 1') F))) (((((((Ly.(Lz.z)) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) ((((T F) 0') (Lz.((z 0') 0'))) (Lz.((z 0') 0'))))) (((((((((((((((((((Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x)0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F)))) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) ((Lz.((((Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))) T) 1') z)) ((((((((Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) x) (Cdr y)))))) 0') (((Ly.(Lz.((((Null (Atom 0')) T) y) z))) Omega) F)) T) (Lx.(Ly.(Lz.0')))) T) 1') F))) (((((((((((If (Null ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) ((Cons 0') 0')) ((Cons (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr ((Lz.((((Null (Atom 0')) T) Omega) z)) F))))) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (((((((((((((((((If (Null 0')) 1') (False (0' T))) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) T) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (Lz.((z (((((((((Lz.((((Null (Null 0')) T) 1') z)) ((((T (Lx.(Ly.(Lz.0')))) T) 1') F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) T)) (((((((((((((Lz.((((Null (Atom 0')) T) Omega) z)) F) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((Ly.(Lz.((((Null ((And (Atom 0')) (Null(Null 0')))) T) y) z))) Omega) (((Ly.(Lz.((((Null 0') T) y) z))) (Lz.((z 0') 0'))) (Lz.((z 0') 0'))))) ((Lz.((((Null ((And (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))) (Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0'))((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))))) T) Omega) z)) ((Lz.((((Null (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) (Lz.((z (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) T))) (((Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x)(Cdr y))))))) (x x)))) x) (Cdr y)))))) 0') (((Ly.(Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) y) z))) Omega) (((((Null (Atom 0')) T) Omega) F) F)))))) z)) (Lz.((z (((Ly.(Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) y) z))) Omega) (((((Null (Atom 0')) T) Omega) F) T))) ((Ly.(((If (Null y)) ((Cons 0') 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr y))))) ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) F))))))))))) (Lz.((z (((((((((((Null (Null 0')) T) 1') ((((T(Lx.(Ly.(Lz.0')))) T) 1') F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) T)) (((((((((((((((Null (Atom 0')) T) Omega) F) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) ((Lz.((((Null((And (Atom 0')) (Null (Null 0')))) T) Omega) z)) ((Lz.((((Null 0') T) (Lz.((z 0') 0'))) z)) (Lz.((z 0') 0'))))) ((((Null ((And (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Cary)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))) (Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x)0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))))) T) Omega) ((Lz.((((Null (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) (Lz.((z (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) T))) (((Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) x) (Cdr y)))))) 0') (((Ly.(Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) y) z))) Omega) (((((Null (Atom 0')) T) Omega) F) F)))))) z)) (Lz.((z (((Ly.(Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) y) z))) Omega) (((((Null (Atom 0')) T) Omega) F) T))) ((Ly.(((If (Null y)) ((Cons 0') 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr y))))) ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) F)))))))))))))

20: (((0' T) (((((((((((((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) ((Lz.((((Null (Null 0')) T) 1') z)) ((((T (Lx.(Ly.(Lz.0')))) T) 1') F))) ((((((Lz.z) 1') (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) ((((Ly.F) 0') (Lz.((z 0') 0'))) (Lz.((z 0') 0'))))) (((((((((((((((((((((If (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))) 1') (False (((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))) T))) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) ((((Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))) T) 1') ((((((((Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) x) (Cdr y)))))) 0') (((Ly.(Lz.((((Null (Atom 0')) T) y) z))) Omega) F)) T) (Lx.(Ly.(Lz.0')))) T) 1') F))) (((((((((((Ly.(Lz.((((Null (Null ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) y) z))) ((Ly.(((If ((And (Atom y)) (Null (Null y)))) Omega) (((If 0') (Lz.((z 0') y))) (Lz.((z 0') y))))) 0')) ((Ly.(((If ((And (Atom y)) (Null (Null y)))) Omega) (((If (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) (Lz.((z (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) y))) (Lz.((z (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) y))))) ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (((((((((((((((((Ly.(Lz.((((Null (Null 0')) T) y) z))) 1') (((((0' T) (Lx.(Ly.(Lz.0')))) T) 1') F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) T) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (Lz.((z (((((((((((Null (Null 0')) T) 1') ((((T (Lx.(Ly.(Lz.0')))) T) 1') F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) T)) (((((((((((((((Null (Atom 0')) T) Omega) F) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) ((Lz.((((Null ((And (Atom 0')) (Null (Null 0')))) T) Omega) z)) ((Lz.((((Null 0') T) (Lz.((z 0') 0'))) z)) (Lz.((z 0') 0'))))) ((((Null ((And (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdry))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))) (Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))))) T) Omega) ((Lz.((((Null (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) (Lz.((z (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) T))) (((Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) x) (Cdr y)))))) 0') (((Ly.(Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) y) z))) Omega) (((((Null (Atom 0')) T) Omega) F) F)))))) z)) (Lz.((z (((Ly.(Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) y) z))) Omega) (((((Null (Atom 0')) T) Omega) F) T))) ((Ly.(((If (Null y)) ((Cons 0') 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y))((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr y))))) ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) F))))))))))) (Lz.((z (((((((((((((((Null 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') ((((Ly.(Lx.(Ly.(Lz.0')))) T) 1') F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) T)) (((((((((((((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) ((((Null ((And (Atom 0')) (Null (Null 0')))) T) Omega) ((Lz.((((Null 0') T) (Lz.((z 0') 0'))) z)) (Lz.((z 0') 0'))))) (((((((((And (Atom ((((Lf.(Lx.(Ly.(((If (Null y))((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))) (Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Nully)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F)))))) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) ((((Null (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) (Lz.((z (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T)Omega) z)) F) T))) (((Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) x) (Cdr y)))))) 0') (((Ly.(Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) y) z))) Omega) (((((Null (Atom 0')) T) Omega) F) F)))))) (Lz.((z (((Ly.(Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) y) z))) Omega) (((((Null (Atom 0')) T) Omega) F) T))) ((Ly.(((If (Null y)) ((Cons 0') 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr y))))) ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) F)))))))))))))

21: ((T (((((((((((((((((((((If (Null 0')) 1') (False (0' T))) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) ((((Null (Null 0')) T) 1') ((((T (Lx.(Ly.(Lz.0')))) T) 1') F))) ((((1' (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) ((F (Lz.((z 0') 0'))) (Lz.((z 0') 0'))))) (((((((((((((((((((((Ly.(Lz.((((Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))) T) y) z))) 1') (((((((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))) T) (Lx.(Ly.(Lz.0')))) T) 1') F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) ((((((((Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x)(Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F)))) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') (((((((Ly.(((If (Null y)) ((Cons 0') 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y))((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr y))))) ((Lz.((((Null (Atom 0')) T) Omega) z)) F)) T) (Lx.(Ly.(Lz.0')))) T) 1') F))) ((((((((((Lz.((((Null (Null ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) ((Ly.(((If ((And (Atom y)) (Null (Null y)))) Omega) (((If 0')(Lz.((z 0') y))) (Lz.((z 0') y))))) 0')) z)) (((If ((And (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))) (Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))))) Omega) (((If (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) (Lz.((z (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F)))))) (Lz.((z (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F)))))))) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) ((((((((((((((((Lz.((((Null (Null 0')) T) 1') z)) ((((T (Lx.(Ly.(Lz.0')))) T) 1') F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) T) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (Lz.((z (((((((((((((((Null 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') ((((Ly.(Lx.(Ly.(Lz.0')))) T) 1') F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) T)) (((((((((((((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) ((((Null ((And (Atom 0')) (Null (Null 0')))) T) Omega) ((Lz.((((Null 0') T) (Lz.((z 0') 0'))) z)) (Lz.((z 0') 0'))))) (((((((((And (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))) (Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F)))))) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) ((((Null (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) (Lz.((z (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) T))) (((Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) x) (Cdr y)))))) 0') (((Ly.(Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) y) z))) Omega) (((((Null (Atom 0')) T) Omega) F) F)))))) (Lz.((z (((Ly.(Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) y) z))) Omega) (((((Null (Atom 0')) T) Omega) F) T))) ((Ly.(((If (Null y)) ((Cons 0') 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0'))((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr y))))) ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) F))))))))))) (Lz.((z ((((((((((((((((((0' (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') (((Lx.(Ly.(Lz.0'))) 1') F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) T)) (((((((((((((((((((((If (Null 0')) 1') (False (0' T))) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((((((((And (Atom 0')) (Null (Null 0'))) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) ((((Null 0') T) (Lz.((z 0') 0'))) (Lz.((z 0') 0'))))) (((((((((Ly.(((If (Null (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F)))))) (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))) y)) (((((Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F)))) (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) ((((((((Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (Lz.((z (((Ly.(Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega)z)) F))) T) y) z))) Omega) (((((Null (Atom 0')) T) Omega) F) T))) ((Ly.(((If (Null y)) ((Cons 0') 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr y))))) ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z))F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) F)))))) (Lz.((z ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) T))) (((If (Null ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) F)))) ((Cons 0') 0')) ((Cons (Car ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) F)))) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) F))))))))))))))))

22: ((Ly.(((((((((((((((((((((If (Null 0')) 1') (False (0' T))) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) ((((Null (Null 0')) T) 1') ((((T (Lx.(Ly.(Lz.0')))) T) 1') F))) ((((1' (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) ((F (Lz.((z 0') 0'))) (Lz.((z 0') 0'))))) ((((((((((((((((((((Lz.((((Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))))) T) 1') z)) ((((((((Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) x) (Cdr y)))))) 0') (((Ly.(Lz.((((Null (Atom 0')) T) y) z))) Omega) F)) T) (Lx.(Ly.(Lz.0')))) T) 1') F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((((((((((((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x)(Cdr y))))))) (x x))))) 0') (((If (Atom 0')) Omega) (0' F))) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') ((((((((If (Null ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) ((Cons 0') 0')) ((Cons (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Nully)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr ((Lz.((((Null (Atom 0')) T) Omega) z)) F))))) T) (Lx.(Ly.(Lz.0')))) T) 1') F))) ((((((((((((Null (Null ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) ((Ly.(((If ((And (Atom y)) (Null (Null y)))) Omega) (((If 0') (Lz.((z 0') y))) (Lz.((z 0') y))))) 0')) (((If ((And (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))) (Null (Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))))) Omega) (((If (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) (Lz.((z (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F)))))) (Lz.((z (Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Consx) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F)))))))) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) ((((((((((((((((((Null (Null 0')) T) 1') ((((T (Lx.(Ly.(Lz.0')))) T) 1') F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) T) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (Lz.((z ((((((((((((((((((0' (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') (((Lx.(Ly.(Lz.0'))) 1') F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) T)) (((((((((((((((((((((If (Null 0')) 1') (False (0' T))) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((((((((And (Atom 0')) (Null (Null 0'))) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) ((((Null 0') T) (Lz.((z 0') 0'))) (Lz.((z 0') 0'))))) (((((((((Ly.(((If (Null (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F)))))) (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))) y)) (((((Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F)))) (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) ((((((((Car ((Lz.((((Null (Atom 0')) T) Omega) z)) F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (Lz.((z (((Ly.(Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) y) z))) Omega) (((((Null (Atom 0')) T) Omega) F) T))) ((Ly.(((If (Null y)) ((Cons 0') 0')) ((Cons (Car y)) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr y))))) ((Lz.((((Null (Atom ((Lz.((((Null (Atom0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) F)))))) (Lz.((z ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z))(((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) T))) (((If (Null ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) F)))) ((Cons 0') 0')) ((Cons (Car ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega)F) F)))) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) F)))))))))))))) (Lz.((z ((((((((((((((((((Lx.(Ly.(Lz.z))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') ((Ly.(Lz.0')) F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) T)) (((((((((((((((((((((Ly.(Lz.((((Null (Null 0')) T) y) z))) 1') (((((0' T) (Lx.(Ly.(Lz.0')))) T) 1') F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((((((((Ly.(((If (Null (Atom 0'))) (Atom 0')) y)) (((((Null 0') (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (((((((0' (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (Lz.((z 0') 0'))) (Lz.((z 0') 0'))))) ((((((((((If (Null (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F)))))) (Atom ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F))))) (((((Null ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))))) 0') (((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) F)))) (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) ((((((((((If (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) Omega) (((Lz.((((Null (Atom 0')) T) Omega) z)) F) T)) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (Lz.((z ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) T))) (((If (Null ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) F)))) ((Cons 0') 0')) ((Cons (Car ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) F)))) ((((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))) 0') (Cdr ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) F))))))))) (Lz.((z ((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) T))) (((Ly.(Lz.((((Null (Null ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) F)))) T) y) z))) ((Ly.(((If ((And (Atom y)) (Null (Null y)))) Omega) (((If 0') (Lz.((z 0') y))) (Lz.((z 0') y))))) 0')) ((Ly.(((If ((And (Atom y)) (Null (Null y)))) Omega) (((If (Car ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) F)))) (Lz.((z (Car ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) F)))) y))) (Lz.((z (Car ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) F)))) y))))) ((((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) ((Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x))) (Lx.((Lf.(Lx.(Ly.(((If (Null y)) ((Cons x) 0')) ((Cons (Car y)) ((f x) (Cdr y))))))) (x x)))))0') (((If (Atom ((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) F)))) Omega) (((Lz.((((Null (Atom ((Lz.((((Null (Atom 0')) T) Omega) z)) F))) T) Omega) z)) (((((((((Atom 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) F) F)) F)))))))))))))))

23: (((((((((((((((((((((If (Null 0')) 1') (False (0' T))) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) ((((Null (Null 0')) T) 1') ((((T (Lx.(Ly.(Lz.0')))) T) 1') F))) ((((1' (Lx.(Ly.(Lz.z)))) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) ((F (Lz.((z 0') 0'))) (Lz.((z 0') 0'))))

24: (((((((((((((((((((((Ly.(Lz.((((Null (Null 0')) T) y) z))) 1') (((((0' T) (Lx.(Ly.(Lz.0')))) T) 1') F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) ((((((((Null 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') ((((Ly.(Lx.(Ly.(Lz.0')))) T) 1') F))) ((((((Lx.(Ly.(Lz.z))) F) 0') T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) ((Ly.y) (Lz.((z 0') 0'))))

25: ((((((((((((((((((((Lz.((((Null (Null 0')) T) 1') z)) ((((T (Lx.(Ly.(Lz.0')))) T) 1') F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((((((((((0' (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') (((Lx.(Ly.(Lz.0'))) 1') F))) (((((Ly.(Lz.z)) 0') T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

26: ((((((((((((((((((((((Null (Null 0')) T) 1') ((((T (Lx.(Ly.(Lz.0')))) T) 1') F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((((((((((Lx.(Ly.(Lz.z))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') ((Ly.(Lz.0')) F))) ((((Lz.z) T) 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

27: ((((((((((((((((((((((((((Null 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') ((((Ly.(Lx.(Ly.(Lz.0')))) T) 1') F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) ((((((((((Ly.(Lz.z)) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') (Lz.0'))) ((T 0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

28: (((((((((((((((((((((((((((((0' (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') (((Lx.(Ly.(Lz.0'))) 1') F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((((((((Lz.z) 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') (Lz.0'))) ((Ly.0') 1')) (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

29: (((((((((((((((((((((((((((((Lx.(Ly.(Lz.z))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') ((Ly.(Lz.0')) F)) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((((((1' (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') (Lz.0'))) 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

30: ((((((((((((((((((((((((((((Ly.(Lz.z)) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') (Lz.0')) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((((((((Lx.(Ly.(Lz.z))) F) 0') T)0') 1') T) 1') (Lz.0'))) 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

31: (((((((((((((((((((((((((((Lz.z) 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') (Lz.0')) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) ((((((((Ly.(Lz.z)) 0') T) 0') 1') T) 1') (Lz.0'))) 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

32: (((((((((((((((((((((((((1' (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') (Lz.0')) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((((((Lz.z) T) 0') 1') T) 1') (Lz.0'))) 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

33: (((((((((((((((((((((((((((Lx.(Ly.(Lz.z))) F) 0') T) 0') 1') T) 1') (Lz.0')) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((((T 0') 1') T) 1') (Lz.0'))) 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

34: ((((((((((((((((((((((((((Ly.(Lz.z)) 0') T) 0') 1') T) 1') (Lz.0')) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((((Ly.0') 1') T) 1') (Lz.0'))) 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

35: (((((((((((((((((((((((((Lz.z) T) 0') 1') T) 1') (Lz.0')) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) (((0' T) 1') (Lz.0'))) 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

36: (((((((((((((((((((((((T 0') 1') T) 1') (Lz.0')) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) ((T 1') (Lz.0'))) 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

37: (((((((((((((((((((((((Ly.0') 1') T) 1') (Lz.0')) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) ((Ly.1') (Lz.0'))) 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

38: (((((((((((((((((((((0' T) 1') (Lz.0')) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

39: ((((((((((((((((((((T 1') (Lz.0')) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

40: ((((((((((((((((((((Ly.1') (Lz.0')) (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

41: ((((((((((((((((((1' (Lx.(Ly.(Lz.z)))) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

42: ((((((((((((((((((((Lx.(Ly.(Lz.z))) F) 0') T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

43: (((((((((((((((((((Ly.(Lz.z)) 0') T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

44: ((((((((((((((((((Lz.z) T) 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

45: ((((((((((((((((T 0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

46: ((((((((((((((((Ly.0') 1') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

47: ((((((((((((((0' (Lx.(Ly.(Lz.z)))) T) 0') 1') T) 1') 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

48: ((((((((((((((Lx.(Ly.(Lz.z))) T) 0') 1') T) 1') 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

49: (((((((((((((Ly.(Lz.z)) 0') 1') T) 1') 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

50: ((((((((((((Lz.z) 1') T) 1') 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

51: ((((((((((1' T) 1') 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

52: (((((((((((T F) 0') 1') 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

53: (((((((((((Ly.F) 0') 1') 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

54: (((((((((F 1') 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

55: (((((((((Ly.y) 0') (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

56: (((((((0' (Lx.(Ly.(Lz.z)))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

57: (((((((Lx.(Ly.(Lz.z))) T) 0') 1') T) Omega) (Lz.((z 0') 0')))

58: ((((((Ly.(Lz.z)) 0') 1') T) Omega) (Lz.((z 0') 0')))

59: (((((Lz.z) 1') T) Omega) (Lz.((z 0') 0')))

60: (((1' T) Omega) (Lz.((z 0') 0')))

61: ((((T F) 0') Omega) (Lz.((z 0') 0')))

62: ((((Ly.F) 0') Omega) (Lz.((z 0') 0')))

63: ((F Omega) (Lz.((z 0') 0')))

64: ((Ly.y) (Lz.((z 0') 0')))

65: (Lz.((z 0') 0'))

Normal Form found:
(Lz.((z 0') 0'))